// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250508125223_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("identity")
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API.Models.District", b =>
                {
                    b.Property<ulong>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("DistrictId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("ProvinceId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("DistrictId");

                    b.ToTable("Districts", "identity");
                });

            modelBuilder.Entity("API.Models.DonVi", b =>
                {
                    b.Property<ulong>("MaDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MaDV"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("longtext");

                    b.Property<string>("TenDV")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaDV");

                    b.ToTable("don_vi", "identity");
                });

            modelBuilder.Entity("API.Models.DotHienMau", b =>
                {
                    b.Property<ulong>("MaDot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MaDot"));

                    b.Property<string>("DiaDiem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DonViMau")
                        .HasColumnType("int");

                    b.Property<int>("SoNguoiDangKy")
                        .HasColumnType("int");

                    b.Property<string>("TenDot")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MaDot");

                    b.ToTable("dot_hien_mau", "identity");
                });

            modelBuilder.Entity("API.Models.LichSuTangQua", b =>
                {
                    b.Property<string>("CCCD")
                        .HasColumnType("varchar(255)");

                    b.Property<ulong>("MaQua")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ThoiGianGui")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CCCD", "MaQua");

                    b.HasIndex("MaQua");

                    b.ToTable("lich_su_tang_qua", "identity");
                });

            modelBuilder.Entity("API.Models.Province", b =>
                {
                    b.Property<ulong>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("ProvinceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProvinceId");

                    b.ToTable("Provinces", "identity");
                });

            modelBuilder.Entity("API.Models.QuaTang", b =>
                {
                    b.Property<ulong>("MaQua")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MaQua"));

                    b.Property<decimal>("GiaTri")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TenQua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaQua");

                    b.ToTable("qua_tang", "identity");
                });

            modelBuilder.Entity("API.Models.QuanTriVien", b =>
                {
                    b.Property<ulong>("MaQTV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MaQTV"));

                    b.Property<string>("BoPhan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaiKhoan_ID")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TenQTV")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaQTV");

                    b.HasIndex("TaiKhoan_ID");

                    b.ToTable("quan_tri_vien", "identity");
                });

            modelBuilder.Entity("API.Models.TTHienMau", b =>
                {
                    b.Property<ulong>("MaTT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MaTT"));

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("KetQua")
                        .HasColumnType("longtext");

                    b.Property<ulong>("MaDV")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("MaDot")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("MaTheTich")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("NgheNghiep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NoiO")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ThoiGianDangKy")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ThoiGianHien")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MaTT");

                    b.HasIndex("CCCD");

                    b.HasIndex("MaDV");

                    b.HasIndex("MaDot");

                    b.HasIndex("MaTheTich");

                    b.ToTable("tt_hien_mau", "identity");
                });

            modelBuilder.Entity("API.Models.TaiKhoan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CCCD")
                        .HasColumnType("longtext");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Create_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("EmailVerificationCode")
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", "identity");
                });

            modelBuilder.Entity("API.Models.TheTichMauHien", b =>
                {
                    b.Property<ulong>("MaTheTich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MaTheTich"));

                    b.Property<int>("TheTich")
                        .HasColumnType("int");

                    b.HasKey("MaTheTich");

                    b.ToTable("the_tich_mau_hien", "identity");
                });

            modelBuilder.Entity("API.Models.ThongBao", b =>
                {
                    b.Property<ulong>("MaTB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MaTB"));

                    b.Property<string>("LinkAnh")
                        .HasColumnType("longtext");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ThoiGianGui")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaTB");

                    b.ToTable("thong_bao", "identity");
                });

            modelBuilder.Entity("API.Models.ThongBao_TinhNguyenVien", b =>
                {
                    b.Property<ulong>("MaTB")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("CCCD")
                        .HasColumnType("varchar(255)");

                    b.HasKey("MaTB", "CCCD");

                    b.HasIndex("CCCD");

                    b.ToTable("thong_bao_TNV", "identity");
                });

            modelBuilder.Entity("API.Models.TinhNguyenVien", b =>
                {
                    b.Property<string>("CCCD")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("MaPhuongXa")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("MaQuanHuyen")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("MaTinhThanh")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OneSiginal_ID")
                        .HasColumnType("longtext");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SoLanHien")
                        .HasColumnType("int");

                    b.Property<string>("TaiKhoan_ID")
                        .HasColumnType("varchar(255)");

                    b.HasKey("CCCD");

                    b.HasIndex("TaiKhoan_ID");

                    b.ToTable("tinh_nguyen_vien", "identity");
                });

            modelBuilder.Entity("API.Models.Ward", b =>
                {
                    b.Property<ulong>("WardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("WardId"));

                    b.Property<ulong>("DistrictId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("WardId");

                    b.ToTable("Wards", "identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", "identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "identity");
                });

            modelBuilder.Entity("API.Models.LichSuTangQua", b =>
                {
                    b.HasOne("API.Models.TinhNguyenVien", "TinhNguyenVien")
                        .WithMany("LichSuTangQuas")
                        .HasForeignKey("CCCD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.QuaTang", "QuaTang")
                        .WithMany("LichSuTangQuas")
                        .HasForeignKey("MaQua")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuaTang");

                    b.Navigation("TinhNguyenVien");
                });

            modelBuilder.Entity("API.Models.QuanTriVien", b =>
                {
                    b.HasOne("API.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("QuanTriViens")
                        .HasForeignKey("TaiKhoan_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("API.Models.TTHienMau", b =>
                {
                    b.HasOne("API.Models.TinhNguyenVien", "TinhNguyenVien")
                        .WithMany("TTHienMaus")
                        .HasForeignKey("CCCD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.DonVi", "DonVi")
                        .WithMany("TTHienMaus")
                        .HasForeignKey("MaDV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.DotHienMau", "DotHienMau")
                        .WithMany("TTHienMaus")
                        .HasForeignKey("MaDot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.TheTichMauHien", "TheTichMauHien")
                        .WithMany("TTHienMaus")
                        .HasForeignKey("MaTheTich")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonVi");

                    b.Navigation("DotHienMau");

                    b.Navigation("TheTichMauHien");

                    b.Navigation("TinhNguyenVien");
                });

            modelBuilder.Entity("API.Models.ThongBao_TinhNguyenVien", b =>
                {
                    b.HasOne("API.Models.TinhNguyenVien", "TinhNguyenVien")
                        .WithMany("ThongBao_TNVs")
                        .HasForeignKey("CCCD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.ThongBao", "ThongBao")
                        .WithMany("ThongBao_TNVs")
                        .HasForeignKey("MaTB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThongBao");

                    b.Navigation("TinhNguyenVien");
                });

            modelBuilder.Entity("API.Models.TinhNguyenVien", b =>
                {
                    b.HasOne("API.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("TinhNguyenViens")
                        .HasForeignKey("TaiKhoan_ID");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("API.Models.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("API.Models.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("API.Models.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.DonVi", b =>
                {
                    b.Navigation("TTHienMaus");
                });

            modelBuilder.Entity("API.Models.DotHienMau", b =>
                {
                    b.Navigation("TTHienMaus");
                });

            modelBuilder.Entity("API.Models.QuaTang", b =>
                {
                    b.Navigation("LichSuTangQuas");
                });

            modelBuilder.Entity("API.Models.TaiKhoan", b =>
                {
                    b.Navigation("QuanTriViens");

                    b.Navigation("TinhNguyenViens");
                });

            modelBuilder.Entity("API.Models.TheTichMauHien", b =>
                {
                    b.Navigation("TTHienMaus");
                });

            modelBuilder.Entity("API.Models.ThongBao", b =>
                {
                    b.Navigation("ThongBao_TNVs");
                });

            modelBuilder.Entity("API.Models.TinhNguyenVien", b =>
                {
                    b.Navigation("LichSuTangQuas");

                    b.Navigation("TTHienMaus");

                    b.Navigation("ThongBao_TNVs");
                });
#pragma warning restore 612, 618
        }
    }
}
